POST http://localhost:3030/latest/sparql
Content-Type: application/sparql-query
Accept: application/json

select * { ?s ?p ?o .}

####

post http://localhost:3030/latest/update
Content-Type: application/sparql-update

drop graph <http://example.com/Graph1>

####

post http://localhost:3030/latest/update
Content-Type: application/sparql-update

prefix : <http://example.com/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
insert data {
    graph :Graph1 {
    : a :Dataset .
    :John :livesAt [
            a :Address;
            :postalCode "wd234xa" 
            ];
        :firstName "Siomon"^^xsd:string .
}}

####
get http://localhost:3030/latest

####

get http://localhost:3030/latest/?default-graph-uri=http://exmaple.com/default

#####
get http://localhost:5000/hello

#####  Use this snippet to add todos to the kg ######
post http://localhost:3030/latest/update
Content-Type: application/sparql-update

prefix : <http://example.com/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
insert data {
    graph :ElmAndApi {
    : a :ToDoList .
    :1 a :ToDo;
        :description "Add sparql snippet loader/saver"^^xsd:string;
        :status "Pending" .
    :2 a :ToDo;
        :description "Add graph, predicate lookup to sparlq text area"@en;
        :status "Pending";
        :related :1 .
}}
#####
post http://localhost:3030/latest/update
Content-Type: application/sparql-update

prefix : <http://example.com/>
delete  where {
    graph :ElmAndApi {:1 :status "Pending" .}};
insert data {graph :ElmAndApi {
    :1 :status "Done" .
}}

#######

post http://localhost:5000/sparql

construct {?s ?p ?o.}
where {
    graph <http://example.com/ElmAndApi>
        {?s ?p ?o.}
}

#####
post http://localhost:3030/latest/update
Content-Type: application/sparql-update

prefix : <http://example.com/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
insert data {
    graph :ElmAndApi {
        :Simon a :Person;
            :livesIn [
                a :Country;
                :countryName "England"
            ], 
            [
                a :Country;
                :countryName "South Africa"
            ] .
}}

####  returns turtle :-( #####
post http://localhost:3030/latest
Content-Type: application/sparql-query

construct {?s ?p ?o.}
where {
    graph <http://example.com/ElmAndApi>
        {?s ?p ?o.}
}